<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Culture" xml:space="preserve">
    <value>yue-HK</value>
  </data>
  <data name="EarthquakeBody" xml:space="preserve">
    <value>{0}，{1}發生規模{2:F1}有感地震，最大震度{3}。</value>
  </data>
  <data name="EarthquakeFocalDepth" xml:space="preserve">
    <value>震源深度{0}公里。</value>
  </data>
  <data name="IntensitySuffixLevel" xml:space="preserve">
    <value>級</value>
  </data>
  <data name="IntensitySuffixLower" xml:space="preserve">
    <value>弱</value>
  </data>
  <data name="IntensitySuffixUpper" xml:space="preserve">
    <value>強</value>
  </data>
  <data name="IntensityUnknown" xml:space="preserve">
    <value>不明</value>
  </data>
  <data name="Title地震報告" xml:space="preserve">
    <value>地震報告</value>
  </data>
  <data name="Title海嘯警報" xml:space="preserve">
    <value>海嘯警報</value>
  </data>
  <data name="Title海嘯警報解除" xml:space="preserve">
    <value>海嘯警報解除</value>
  </data>
  <data name="TsunamiForecast" xml:space="preserve">
    <value>以下地區預計海嘯高度{0}。</value>
  </data>
  <data name="TsunamiForecastArea" xml:space="preserve">
    <value>{0}。預計到達時間{1:HH:mm}。</value>
  </data>
  <data name="TsunamiForecastArea北部沿海地區" xml:space="preserve">
    <value>北部沿海地區</value>
  </data>
  <data name="TsunamiForecastArea東北沿海地區" xml:space="preserve">
    <value>東北沿海地區</value>
  </data>
  <data name="TsunamiForecastArea東南沿海地區" xml:space="preserve">
    <value>東南沿海地區</value>
  </data>
  <data name="TsunamiForecastArea東部沿海地區" xml:space="preserve">
    <value>東部沿海地區</value>
  </data>
  <data name="TsunamiForecastArea海峽沿海地區" xml:space="preserve">
    <value>海峽沿海地區</value>
  </data>
  <data name="TsunamiForecastArea西南沿海地區" xml:space="preserve">
    <value>西南沿海地區</value>
  </data>
  <data name="TsunamiForecastWaveHeight1至3公尺" xml:space="preserve">
    <value>1至3米</value>
  </data>
  <data name="TsunamiForecastWaveHeight3至6公尺" xml:space="preserve">
    <value>3至6米</value>
  </data>
  <data name="TsunamiForecastWaveHeight大於6公尺" xml:space="preserve">
    <value>大於6米</value>
  </data>
  <data name="TsunamiForecastWaveHeight小於1公尺" xml:space="preserve">
    <value>小於1米</value>
  </data>
  <data name="TsunamiObservation" xml:space="preserve">
    <value>當前，各地觀測到嘅海嘯高度如下。</value>
  </data>
  <data name="TsunamiObservationStation" xml:space="preserve">
    <value>{0}。{1}米。</value>
  </data>
</root>